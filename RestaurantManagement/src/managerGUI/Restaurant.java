/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Restaurant.java
 *
 * Created on Feb 15, 2009, 6:30:05 PM
 */

package managerGUI;

import businessobjects.Table;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionAdapter;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import persistence.TableBroker;

/**
 *
 * @author 349322
 */
public class Restaurant extends javax.swing.JFrame {


    //TODO: Help Menu, Drag with only left click
    
    static Restaurant r;
    Dimension dim = new Dimension(Toolkit.getDefaultToolkit().getScreenSize());
    int screenWidth = (int)dim.getWidth();
    int screenHeight = (int)dim.getHeight();
    int defTableX;
    int defTableY;
    int defBoothX;
    int defBoothY;
    int defBarX;
    int defBarY;

    int currFloor;

    int gw = 50;//grid width
    int gh = 50;//grid height

    int npx, npy;//current snap coords

    BufferedImage buf;

    Component c;

    ArrayList compArray = new ArrayList();
    ArrayList otherFloor;
    
    /** Creates new Restaurant Configuration form, adds listeners
     * and sets variables to their default state
     */
    private Restaurant() {
        initComponents();

        defTableX=table.getX();
        defTableY=table.getY();

        defBoothX=booth.getX();
        defBoothY=booth.getY();

        defBarX=bar.getX();
        defBarY=bar.getY();

        booth.addMouseMotionListener(new moveIconHandler());
        table.addMouseMotionListener(new moveIconHandler());
        bar.addMouseMotionListener(new moveIconHandler());

        table.addMouseListener(new DragReleaseT());
        booth.addMouseListener(new DragReleaseB());
        bar.addMouseListener(new DragReleaseR());

        tableSeats.setVisible(false);
        barSeats.setVisible(false);
        boothSeats.setVisible(false);

        table.add(tableLabel, 0);
        table.add(tableSeats, 1);
        table.getComponent(0).setLocation(0,table.getHeight()/2-15);

        booth.add(boothLabel, 0);
        booth.add(boothSeats, 1);
        booth.getComponent(0).setLocation(0,booth.getHeight()/2-20);

        bar.add(barLabel, 0);
        bar.add(barSeats, 1);
        bar.getComponent(0).setLocation(0,bar.getHeight()/2-15);

        compArray.add(table);
        compArray.add(booth);
        compArray.add(bar);

        currFloor=1;

        setIgnoreRepaint(false);
        loadTables();

        vSep.setBounds(130,80,vSep.getWidth(),tableBack.getHeight()-80);
        jPanel2.setSize(screenWidth,jPanel2.getHeight());
    }

    /**
     * Singleton pattern that checks if an instance of a Restaurant configuration
     * form has been created. If not it creates one.
     * @return the Restaurant Configuration object
     */
    public static Restaurant getGUI()
    {
        if (r==null)
        {
            r=new Restaurant();
            
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            GraphicsDevice gs = ge.getDefaultScreenDevice();

            try {
                gs.setFullScreenWindow(r);
                r.validate();
            } catch(Error e) {
                gs.setFullScreenWindow(null);
            }

            r.setVisible(true);
        }

        return r;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new javax.swing.JPopupMenu();
        mnuNumber = new javax.swing.JMenuItem();
        mnuSeats = new javax.swing.JMenuItem();
        mnuSep = new javax.swing.JSeparator();
        mnuDelete = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        tableBack = new javax.swing.JLayeredPane();
        tableLabel = new javax.swing.JLabel();
        table = new javax.swing.JLabel();
        barLabel = new javax.swing.JLabel();
        bar = new javax.swing.JLabel();
        boothLabel = new javax.swing.JLabel();
        booth = new javax.swing.JLabel();
        vSep = new javax.swing.JSeparator();
        btnSave = new javax.swing.JButton();
        btnRevert = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        barSeats = new javax.swing.JLabel();
        tableSeats = new javax.swing.JLabel();
        boothSeats = new javax.swing.JLabel();
        btnFloor1 = new javax.swing.JButton();
        btnFloor2 = new javax.swing.JButton();
        lblFloor = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        mnuNumber.setText("Set/Edit Table ID");
        mnuNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuNumberMouseReleased(evt);
            }
        });
        pop.add(mnuNumber);

        mnuSeats.setText("Set/Edit Seats");
        mnuSeats.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuSeatsMouseReleased(evt);
            }
        });
        pop.add(mnuSeats);
        pop.add(mnuSep);

        mnuDelete.setText("Delete Table");
        mnuDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mnuDeleteMouseReleased(evt);
            }
        });
        pop.add(mnuDelete);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Restaurant Configuration");
        setResizable(false);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));

        tableLabel.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        tableLabel.setForeground(new java.awt.Color(255, 255, 255));
        tableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableLabel.setText("Table");
        tableLabel.setBounds(20, 120, 90, 30);
        tableBack.add(tableLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        table.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/table.png"))); // NOI18N
        table.setToolTipText("Table");
        table.setBounds(20, 90, 92, 92);
        tableBack.add(table, javax.swing.JLayeredPane.DEFAULT_LAYER);

        barLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
        barLabel.setForeground(new java.awt.Color(255, 255, 255));
        barLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        barLabel.setText("Bar");
        barLabel.setBounds(20, 360, 90, 30);
        tableBack.add(barLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        bar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bar.png"))); // NOI18N
        bar.setToolTipText("Bar Customer");
        bar.setBounds(20, 330, 90, 90);
        tableBack.add(bar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        boothLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
        boothLabel.setForeground(new java.awt.Color(255, 255, 255));
        boothLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boothLabel.setText("Booth");
        boothLabel.setBounds(20, 240, 90, 40);
        tableBack.add(boothLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        booth.setForeground(new java.awt.Color(255, 255, 255));
        booth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        booth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/booth.png"))); // NOI18N
        booth.setToolTipText("Booth");
        booth.setName("booth"); // NOI18N
        booth.setBounds(20, 210, 92, 92);
        tableBack.add(booth, javax.swing.JLayeredPane.DEFAULT_LAYER);

        vSep.setOrientation(javax.swing.SwingConstants.VERTICAL);
        vSep.setMinimumSize(new java.awt.Dimension(110, 220));
        vSep.setBounds(130, 80, 10, 740);
        tableBack.add(vSep, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnSave.setToolTipText("Save Layout");
        btnSave.setFocusable(false);
        btnSave.setLabel("Save");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnSaveMouseReleased(evt);
            }
        });
        btnSave.setBounds(10, 560, 110, 50);
        tableBack.add(btnSave, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnRevert.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnRevert.setText("Restore");
        btnRevert.setToolTipText("Revert to Last Save");
        btnRevert.setFocusable(false);
        btnRevert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRevertMouseReleased(evt);
            }
        });
        btnRevert.setBounds(10, 440, 110, 50);
        tableBack.add(btnRevert, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnClear.setText("Clear");
        btnClear.setToolTipText("Clear All Tables");
        btnClear.setFocusable(false);
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnClearMouseReleased(evt);
            }
        });
        btnClear.setBounds(10, 500, 110, 50);
        tableBack.add(btnClear, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/help.png"))); // NOI18N
        btnHelp.setToolTipText("Help");
        btnHelp.setBorderPainted(false);
        btnHelp.setContentAreaFilled(false);
        btnHelp.setFocusable(false);
        btnHelp.setBounds(40, 730, 50, 50);
        tableBack.add(btnHelp, javax.swing.JLayeredPane.DEFAULT_LAYER);

        barSeats.setForeground(new java.awt.Color(255, 255, 255));
        barSeats.setText("4");
        barSeats.setBounds(380, 270, 6, 14);
        tableBack.add(barSeats, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tableSeats.setForeground(new java.awt.Color(255, 255, 255));
        tableSeats.setText("4");
        tableSeats.setBounds(380, 230, 0, 14);
        tableBack.add(tableSeats, javax.swing.JLayeredPane.DEFAULT_LAYER);

        boothSeats.setForeground(new java.awt.Color(255, 255, 255));
        boothSeats.setText("4");
        boothSeats.setBounds(380, 250, 6, 14);
        tableBack.add(boothSeats, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnFloor1.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnFloor1.setForeground(Color.red);
        btnFloor1.setText("1");
        btnFloor1.setFocusable(false);
        btnFloor1.setRolloverEnabled(false);
        btnFloor1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnFloor1MouseReleased(evt);
            }
        });
        btnFloor1.setBounds(10, 660, 50, 50);
        tableBack.add(btnFloor1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnFloor2.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnFloor2.setForeground(Color.gray);
        btnFloor2.setText("2");
        btnFloor2.setFocusable(false);
        btnFloor2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnFloor2MouseReleased(evt);
            }
        });
        btnFloor2.setBounds(70, 660, 50, 50);
        tableBack.add(btnFloor2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        lblFloor.setFont(new java.awt.Font("Tahoma", 0, 18));
        lblFloor.setForeground(new java.awt.Color(255, 255, 255));
        lblFloor.setText("Floor:");
        lblFloor.setBounds(10, 620, 110, 22);
        tableBack.add(lblFloor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnLogout.setFont(new java.awt.Font("Tahoma", 0, 22));
        btnLogout.setText("Logout");
        btnLogout.setFocusable(false);

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home.png"))); // NOI18N
        btnHome.setFocusable(false);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 48));
        lblTitle.setText("Restaurant Configuration");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnHome)
                .add(38, 38, 38)
                .add(lblTitle)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnLogout, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblTitle)
                    .add(btnHome, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .add(btnLogout, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBounds(0, 0, 770, 80);
        tableBack.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tableBack, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tableBack, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method that clears all the tables from the screen.
     * Used when user wants to start restaurant configuration from scratch
     * @param evt - the mouse event
     */
    private void btnClearMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseReleased
        if (compArray.size()>0&&JOptionPane.showInternalConfirmDialog(r.getContentPane(),
                "This will erase all tables from the screen. \nYou will still be able to recover your last SAVED configuration by pressing restore. \nDo you wish to continue?"
                , "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION)
        {
            clearTables();
        }
    }//GEN-LAST:event_btnClearMouseReleased

    /**
     * Method that saves the current configuration of the tables on screen
     * to the database
     * @param evt - the mouse event
     */
    private void btnSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseReleased

        ArrayList<Table> toSave = new ArrayList<Table>();

        for (int i=0;i<compArray.size();i++)
        {
            JLabel tempLabel = (JLabel)compArray.get(i);
            if (tempLabel.getBackground()==Color.cyan)
            {
                if (tempLabel.getIcon().toString().contains("table"))
                {
                    toSave.add(new Table(Integer.parseInt(((JLabel)tempLabel.getComponent(0)).getText()), 
                            'A', Integer.parseInt(((JLabel)tempLabel.getComponent(1)).getText()), tempLabel.getX(), tempLabel.getY(), 'T', null, currFloor));
                } else if (tempLabel.getIcon().toString().contains("booth"))
                {
                    toSave.add(new Table(Integer.parseInt(((JLabel)tempLabel.getComponent(0)).getText()),
                            'A', Integer.parseInt(((JLabel)tempLabel.getComponent(1)).getText()), tempLabel.getX(), tempLabel.getY(), 'B', null, currFloor));
                } else if (tempLabel.getIcon().toString().contains("bar"))
                {
                    toSave.add(new Table(Integer.parseInt(((JLabel)tempLabel.getComponent(0)).getText()),
                            'A', Integer.parseInt(((JLabel)tempLabel.getComponent(1)).getText()), tempLabel.getX(), tempLabel.getY(), 'R', null, currFloor));
                }

            }
        }

        TableBroker tb = TableBroker.getBroker();
        tb.saveAll(toSave);
        
        JOptionPane.showInternalMessageDialog(r.getContentPane(), (Object)"Saved Successfully", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnSaveMouseReleased

    /**
     * Method that allows the user to change the table identifier (number)
     * @param evt - the mouse event
     */
    private void mnuNumberMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuNumberMouseReleased
            boolean breaker=false;
            String input=null;
            String message = "Please enter unique table identifier greater than zero";
            int messageNum = JOptionPane.QUESTION_MESSAGE;

            while (breaker==false)
            {
                input = (String)JOptionPane.showInternalInputDialog(c, message,"Input",
                        messageNum,null,null,compArray.size()-2);

                try {
                    if (input!=null)
                        if (Integer.parseInt(input)<1)
                            throw new NumberFormatException();
                    breaker=true;
                } catch (NumberFormatException ex)
                {
                    message="The table identifier must be a whole number greater than zero";
                    messageNum = JOptionPane.ERROR_MESSAGE;
                }                

                if (input!=null)
                {
                    for (int i=0;i<otherFloor.size();i++)
                    {
                        if (Integer.parseInt(input)==otherFloor.get(i))
                        {
                            message="That table identifier is already in use. Try again";
                            messageNum = JOptionPane.ERROR_MESSAGE;
                            breaker=false;
                        }
                    }
                    if (breaker)
                    {
                        for (int i=0;i<otherFloor.size();i++)
                        {
                            if (Integer.parseInt(input)==otherFloor.get(i))
                            {
                                message="That table identifier is already in use. Try again";
                                messageNum = JOptionPane.ERROR_MESSAGE;
                                breaker=false;
                            }
                        }
                    }
                    if (breaker)
                    {
                        for (int i=0; i<compArray.size();i++)
                        {
                            String comp = ((JLabel)((JLabel)compArray.get(i)).getComponent(0)).getText();
                            if (input.equalsIgnoreCase(comp)&&(JLabel)compArray.get(i)!=c)
                            {
                                message="That table identifier is already in use. Try again";
                                messageNum = JOptionPane.ERROR_MESSAGE;
                                breaker = false;
                                break;
                            }
                        }
                    }
                    if (breaker)
                    {
                        ((JLabel)((JLabel)c).getComponent(0)).setText(input);
                    }
                } else
                {
                    if (c.getBackground()!=Color.cyan)
                    {
                        c.setVisible(false);
                        compArray.remove(c);
                        breaker=true;
                    }
                }
            }
    }//GEN-LAST:event_mnuNumberMouseReleased

    /**
     * Erases all changes the user has made since the last save.
     * @param evt - the mouse event
     */
    private void btnRevertMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRevertMouseReleased
        if (JOptionPane.showInternalConfirmDialog(r.getContentPane(),
                "This will erase all changes you have made since your last save. \nDo you wish to continue?"
                , "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION)
        {
            clearTables();
            loadTables();
        }
    }//GEN-LAST:event_btnRevertMouseReleased

    /**
     * Deletes the table from the program
     * @param evt - the mouse event
     */
    private void mnuDeleteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuDeleteMouseReleased
        c.setVisible(false);
        compArray.remove(c);
    }//GEN-LAST:event_mnuDeleteMouseReleased

    private void mnuSeatsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuSeatsMouseReleased
        boolean breaker=false;
        String input=null;
        String message = "Please enter table's usual number of seats (default: 4)";
        int messageNum = JOptionPane.QUESTION_MESSAGE;

        while (breaker==false)
        {
            input = (String)JOptionPane.showInternalInputDialog(c, message,"Input",
                    messageNum,null,null,((JLabel)((JLabel)c).getComponent(1)).getText());

            try {
                if (input!=null)
                    if (Integer.parseInt(input)<0)
                        throw new NumberFormatException();
                breaker=true;
            } catch (NumberFormatException ex)
            {
                message="The number of seats must be a positive whole number";
                messageNum = JOptionPane.ERROR_MESSAGE;
            }

            if (input!=null)
            {
                ((JLabel)((JLabel)c).getComponent(1)).setText(input);
            } else
            {
                breaker=true;
            }
        }
    }//GEN-LAST:event_mnuSeatsMouseReleased

    /**
     * Changes the current floor to floor 1
     * @param evt - the mouse event
     */
    private void btnFloor1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFloor1MouseReleased
        if (currFloor!=1&&JOptionPane.showInternalConfirmDialog(r.getContentPane(),
                "This will erase all changes you have made on this floor since your last save. \nDo you wish to continue?"
                , "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION)
        {
            changeFloor(1);
            btnFloor2.setForeground(Color.gray);
            btnFloor1.setForeground(Color.red);
            btnFloor1.setRolloverEnabled(false);
            btnFloor2.setRolloverEnabled(true);
        }
    }//GEN-LAST:event_btnFloor1MouseReleased

    /**
     * Changes the current floor to floor 2
     * @param evt - the mouse event
     */
    private void btnFloor2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFloor2MouseReleased
        if (currFloor!=2&&JOptionPane.showInternalConfirmDialog(r.getContentPane(),
                "This will erase all changes you have made on this floor since your last save. \nDo you wish to continue?"
                , "Confirmation", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION)
        {
            changeFloor(2);
            btnFloor1.setForeground(Color.gray);
            btnFloor2.setForeground(Color.red);
            btnFloor2.setRolloverEnabled(false);
            btnFloor1.setRolloverEnabled(true);
        }
    }//GEN-LAST:event_btnFloor2MouseReleased




    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                getGUI();

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bar;
    private javax.swing.JLabel barLabel;
    private javax.swing.JLabel barSeats;
    private javax.swing.JLabel booth;
    private javax.swing.JLabel boothLabel;
    private javax.swing.JLabel boothSeats;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnFloor1;
    private javax.swing.JButton btnFloor2;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRevert;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFloor;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JMenuItem mnuDelete;
    private javax.swing.JMenuItem mnuNumber;
    private javax.swing.JMenuItem mnuSeats;
    private javax.swing.JSeparator mnuSep;
    private javax.swing.JPopupMenu pop;
    private javax.swing.JLabel table;
    private javax.swing.JLayeredPane tableBack;
    private javax.swing.JLabel tableLabel;
    private javax.swing.JLabel tableSeats;
    private javax.swing.JSeparator vSep;
    // End of variables declaration//GEN-END:variables


    /**
     * Method that clears all the tables from the screen.
     * Used when user wants to start restaurant configuration from scratch.
     */
public void clearTables()
{
    for (int i=compArray.size()-1;i>=0;i--)
    {
        if (((JLabel)compArray.get(i)).getBackground()==Color.cyan)
        {
            ((JLabel)compArray.get(i)).setVisible(false);
            compArray.remove(i);
        }

    }
}


/**
 * Changes the floor that is currently being configured
 * @param floor - the floor to open for configuration
 */
public void changeFloor(int floor)
{
    currFloor=floor;
    clearTables();
    loadTables();
}

/**
 * Method used to load all the tables from the database and display them on the screen.
 */
public void loadTables()
{
    otherFloor=new ArrayList();

    TableBroker tb = TableBroker.getBroker();
    ArrayList load = tb.getAll();

    for (int i=0;i<load.size();i++)
    {
        Table curr = (Table)load.get(i);

        if (curr.getFloor()==currFloor)
        {
            javax.swing.JLabel tempObjLabel = new javax.swing.JLabel();
            javax.swing.JLabel tempObj = new javax.swing.JLabel();
            javax.swing.JLabel tempObjSeats = new javax.swing.JLabel();

            tempObjLabel.setForeground(new java.awt.Color(255, 255, 255));
            tempObjLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
            tempObjLabel.setBounds(20, 50, 90, 30);
            tempObjLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            tempObjLabel.setText(curr.getId()+"");

            if (curr.getType()=='T')
            {
            tempObj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/table.png"))); // NOI18N
            tempObj.setToolTipText("Table");
            tempObj.addMouseListener(new DragReleaseT());
            } else if (curr.getType()=='B')
            {
            tempObj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/booth.png"))); // NOI18N
            tempObj.setToolTipText("Booth");
            tempObj.addMouseListener(new DragReleaseB());
            } else if (curr.getType()=='R')
            {
            tempObj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bar.png"))); // NOI18N
            tempObj.setToolTipText("Bar");
            tempObj.addMouseListener(new DragReleaseR());
            }

            tableBack.add(tempObj, javax.swing.JLayeredPane.DEFAULT_LAYER);
            tempObj.setBounds(curr.getXLoc(), curr.getYLoc(), 92, 92);


            tempObj.addMouseMotionListener(new moveIconHandler());

            tempObj.setBackground(Color.cyan);
            tempObj.add(tempObjLabel, 0);
            tempObj.getComponent(0).setLocation(0,tempObj.getHeight()/2-15);

            tempObjSeats.setForeground(new java.awt.Color(255, 255, 255));
            tempObjSeats.setText(curr.getSeats()+"");
            tempObjSeats.setBounds(380, 270, 6, 14);
            tempObj.add(tempObjSeats, 1);

            tempObjSeats.setVisible(false);

            compArray.add(tempObj);
        } else {
            otherFloor.add(otherFloor.size(), curr.getId());
        }
    }
}

/**
 * Snaps the table to an invisible grid to make for easy alignment. Prompts user
 * for table id number and handles invalid inputs. If the table is dragged to an
 * invalid position, this method deletes it
 * @param e - the mouse event
 * @return whether or not the object snapped to grid was a new object
 * dragged from the toolbar or an old object that was already placed on the
 * screen
 */
    private boolean snapToGrid(MouseEvent e)
    {
        int x = c.getLocation().x, y = c.getLocation().y;
        int mx = x % gw, my = y % gh;

        if (mx<gw/2) npx = x - mx;
            else npx = x + (gw-mx);

        if (my<gh/2) npy = y - my;
            else npy = y + (gh-my);

        
        c.setLocation(npx,npy);
        boolean breaker=false;
        String input=null;
        String message = "Please enter unique table identifier greater than zero";
        boolean oldItem=true;
        
        
        
        if (e.getButton()==3)
        {
            pop.show(c, e.getX(), e.getY());            
        }

        if (c.getBackground()!=Color.cyan)
        {
            oldItem=false;
            c.setBackground(Color.cyan);

            input=null;
            int messageNum = JOptionPane.QUESTION_MESSAGE;

            while (breaker==false)
            {
                
                input = (String)JOptionPane.showInternalInputDialog(c, message,"Input",
                        messageNum,null,null,compArray.size()-2);

                try {
                    if (input!=null)
                        if (Integer.parseInt(input)<1)
                            throw new NumberFormatException();
                    breaker=true;
                } catch (NumberFormatException ex)
                {
                    message="The table identifier must be a whole number greater than zero";
                    messageNum = JOptionPane.ERROR_MESSAGE;
                }

                if (input!=null)
                {
                    for (int i=0;i<otherFloor.size();i++)
                    {
                        if (Integer.parseInt(input)==otherFloor.get(i))
                        {
                            message="That table identifier is already in use. Try again";
                            messageNum = JOptionPane.ERROR_MESSAGE;
                            breaker=false;
                        }
                    }
                    if (breaker)
                    {
                        for (int i=0; i<compArray.size();i++)
                        {
                            String comp = ((JLabel)((JLabel)compArray.get(i)).getComponent(0)).getText();
                            if (input.equalsIgnoreCase(comp)&&(JLabel)compArray.get(i)!=c)
                            {

                                message="That table identifier is already in use. Try again";
                                messageNum = JOptionPane.ERROR_MESSAGE;
                                breaker = false;
                                break;
                            }
                        }
                    }
                    if (breaker)
                    {
                        ((JLabel)((JLabel)c).getComponent(0)).setText(input);
                    }
                } else
                {
                    c.setVisible(false);
                    compArray.remove(c);
                    breaker=true;
                }
            }
        }
        return oldItem;
    }


    /**
     * Method that allows for the drag and drop functionality for the tables
     */
    private class moveIconHandler extends MouseMotionAdapter {
        @Override
        public void mouseDragged(MouseEvent e) {    
                c = e.getComponent();
                c.setLocation( c.getX()+e.getX()-c.getWidth()/2, c.getY()+e.getY()-c.getHeight()/2 );
        }
        
    }

    /**
     * When a table has been dragged and positioned into its appropriate position
     * this method checks where it was dragged and if not in a suitable place it deletes it.
     * If it is the first time the table has been dragged from the toolbar it asks the user
     * to set the table identifier. It also then generates a new table in the toolbar
     * for the user to manipulate
     */
    public class DragReleaseT implements MouseListener {

        public void mouseClicked(MouseEvent e) {

        }

        public void mousePressed(MouseEvent e) {

        }

        public void mouseReleased(MouseEvent e) {
            c = e.getComponent();
            
            if (c.getLocation().x<vSep.getLocation().x||c.getLocation().y<jPanel2.getHeight())
            {
                c.setLocation(defTableX, defTableY);

                if (c.getBackground()==Color.cyan)
                {
                    c.setVisible(false);
                    compArray.remove(c);
                }
            }else {
                if (!snapToGrid(e))
                {
                    javax.swing.JLabel tempTableLabel = new javax.swing.JLabel();
                    javax.swing.JLabel tempTable = new javax.swing.JLabel();
                    javax.swing.JLabel tempTableSeats = new javax.swing.JLabel();

                    tempTableLabel.setForeground(new java.awt.Color(255, 255, 255));
                    tempTableLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
                    tempTableLabel.setBounds(20, 120, 90, 30);
                    tempTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    tempTableLabel.setText("Table");
                    tableBack.add(tempTableLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/table.png"))); // NOI18N
                    tempTable.setToolTipText("Table");
                    tempTable.setBounds(20, 90, 92, 92);
                    tableBack.add(tempTable, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempTable.addMouseMotionListener(new moveIconHandler());
                    tempTable.addMouseListener(new DragReleaseT());

                    tempTable.add(tempTableLabel, 0);
                    tempTable.getComponent(0).setLocation(0,tempTable.getHeight()/2-15);

                    tempTableSeats.setForeground(new java.awt.Color(255, 255, 255));
                    tempTableSeats.setText("4");
                    tempTableSeats.setBounds(380, 270, 6, 14);
                    tempTable.add(tempTableSeats, 1);

                    tempTableSeats.setVisible(false);

                    compArray.add(tempTable);
                }
            }
        }

        public void mouseEntered(MouseEvent e) {

        }

        public void mouseExited(MouseEvent e) {
            
        }


    }

    /**
     * When a booth has been dragged and positioned into its appropriate position
     * this method checks where it was dragged and if not in a suitable place it deletes it.
     * If it is the first time the booth has been dragged from the toolbar it asks the user
     * to set the booth identifier. It also then generates a new booth in the toolbar
     * for the user to manipulate
     */
    public class DragReleaseB implements MouseListener {

        public void mouseClicked(MouseEvent e) {

        }

        public void mousePressed(MouseEvent e) {

        }

        public void mouseReleased(MouseEvent e) {
            c = e.getComponent();
            if (c.getLocation().x<vSep.getLocation().x||c.getLocation().y<jPanel2.getHeight())
            {
                c.setLocation(defBoothX, defBoothY);

                if (c.getBackground()==Color.cyan)
                {
                    c.setVisible(false);
                    compArray.remove(c);
                }
            }else {
                if (!snapToGrid(e))
                {
                    javax.swing.JLabel tempBoothLabel = new javax.swing.JLabel();
                    javax.swing.JLabel tempBooth = new javax.swing.JLabel();
                    javax.swing.JLabel tempBoothSeats = new javax.swing.JLabel();

                    tempBoothLabel.setForeground(new java.awt.Color(255, 255, 255));
                    tempBoothLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    tempBoothLabel.setText("Booth");
                    tempBoothLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
                    tempBoothLabel.setBounds(20, 240, 90, 40);
                    tableBack.add(tempBoothLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempBooth.setForeground(new java.awt.Color(255, 255, 255));
                    tempBooth.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    tempBooth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/booth.png"))); // NOI18N
                    tempBooth.setToolTipText("Booth");
                    tempBooth.setName("booth"); // NOI18N
                    tempBooth.setBounds(20, 210, 92, 92);
                    tableBack.add(tempBooth, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempBooth.addMouseMotionListener(new moveIconHandler());
                    tempBooth.addMouseListener(new DragReleaseB());

                    tempBooth.add(tempBoothLabel, 0);
                    tempBooth.getComponent(0).setLocation(0,tempBooth.getHeight()/2-20);

                    tempBoothSeats.setForeground(new java.awt.Color(255, 255, 255));
                    tempBoothSeats.setText("4");
                    tempBoothSeats.setBounds(380, 270, 6, 14);
                    tempBooth.add(tempBoothSeats, 1);
                    tempBoothSeats.setVisible(false);

                    compArray.add(tempBooth);
                }
            }
        }

        public void mouseEntered(MouseEvent e) {

        }

        public void mouseExited(MouseEvent e) {

        }


    }


    /**
     * When a bar has been dragged and positioned into its appropriate position
     * this method checks where it was dragged and if not in a suitable place it deletes it.
     * If it is the first time the bar has been dragged from the toolbar it asks the user
     * to set the bar identifier. It also then generates a new bar in the toolbar
     * for the user to manipulate
     */
    public class DragReleaseR implements MouseListener {

        public void mouseClicked(MouseEvent e) {

        }

        public void mousePressed(MouseEvent e) {

        }

        public void mouseReleased(MouseEvent e) {
            c = e.getComponent();
            if (c.getLocation().x<vSep.getLocation().x||c.getLocation().y<jPanel2.getHeight())
            {
                c.setLocation(defBarX, defBarY);

                if (c.getBackground()==Color.cyan)
                {
                    c.setVisible(false);
                    compArray.remove(c);
                }
            }else {
                if (!snapToGrid(e))
                {
                    javax.swing.JLabel tempBarLabel = new javax.swing.JLabel();
                    javax.swing.JLabel tempBar = new javax.swing.JLabel();
                    javax.swing.JLabel tempBarSeats = new javax.swing.JLabel();

                    tempBarLabel.setForeground(new java.awt.Color(255, 255, 255));
                    tempBarLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

                    tempBarLabel.setText("Bar");
                    tempBarLabel.setFont(new java.awt.Font("Tahoma", 0, 22));
                    tempBarLabel.setBounds(20, 360, 90, 30);
                    tableBack.add(tempBarLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempBar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                    tempBar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bar.png"))); // NOI18N
                    tempBar.setToolTipText("Bar Customer");
                    tempBar.setBounds(20, 330, 90, 90);

                    tableBack.add(tempBar, javax.swing.JLayeredPane.DEFAULT_LAYER);

                    tempBar.addMouseMotionListener(new moveIconHandler());
                    tempBar.addMouseListener(new DragReleaseR());

                    tempBar.add(tempBarLabel, 0);
                    tempBar.getComponent(0).setLocation(0,tempBar.getHeight()/2-15);

                    tempBarSeats.setForeground(new java.awt.Color(255, 255, 255));
                    tempBarSeats.setText("4");
                    tempBarSeats.setBounds(380, 270, 6, 14);
                    tempBar.add(tempBarSeats, 1);
                    tempBarSeats.setVisible(false);

                    compArray.add(tempBar);
                }
            }
        }

        public void mouseEntered(MouseEvent e) {

        }

        public void mouseExited(MouseEvent e) {

        }


    }
}
